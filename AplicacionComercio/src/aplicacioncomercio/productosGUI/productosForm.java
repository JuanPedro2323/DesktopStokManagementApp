/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplicacioncomercio.productosGUI;

import aplicacioncomercio.productosBL.productosBL;
import aplicacioncomercio.productosDAL.conexion;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

      
/**
 *
 * @author J P Salmeron Dittamo
 */
public class productosForm extends javax.swing.JFrame {
    //conexion conn = new conexion();
    //Connection connect = conn.conectar(); //PARA CONECTAR Y MODIFICAR DESDE JTable
    
    DefaultTableModel model;
    TableRowSorter<DefaultTableModel> sorter;
    
    /**
     * Creates new form productosForm
     */
    public productosForm() {
        initComponents();
        
         
        String[] titulos = {"Codigo", "Producto", "Marca", "Precio x menor", "Precio x Mayor", "Stock", "Precio de lista"};
        model = new DefaultTableModel(null, titulos);
        tblProductos.setModel(model);
        tblProductos.setAutoCreateRowSorter(true);
        sorter = new TableRowSorter<>(model);
        tblProductos.setRowSorter(sorter);
        
        tblProductos.setDefaultRenderer(Object.class, new ColoresStock());
        
        this.mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDeLista = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        txtPorMenor = new javax.swing.JTextField();
        txtPorMayor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtPorcentajePrecioDeLista = new javax.swing.JTextField();
        btnAumentoPrecioDeLista = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblInstruccionesSeleccion = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblStockIr = new javax.swing.JLabel();
        lblCatalogoIr = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");
        setBackground(new java.awt.Color(204, 255, 204));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null", "null", "null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblProductos.setGridColor(new java.awt.Color(102, 102, 102));
        tblProductos.setShowGrid(true);
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Buscar:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Productos:");

        jLabel4.setText("Código:");

        jLabel5.setText("Marca:");

        jLabel6.setText("Producto:");

        jLabel7.setText("Precio de Lista:");

        txtDeLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeListaActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Catálogo:");

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jLabel12.setText("Por menor: ");

        jLabel13.setText("Por mayor:");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Agregar o modificar elementos:");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("Calcular precios:");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("Incremento de precio de lista:");

        btnAumentoPrecioDeLista.setText("Aumentar");
        btnAumentoPrecioDeLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAumentoPrecioDeListaActionPerformed(evt);
            }
        });

        jLabel2.setText("Porcentaje a precio de lista:");

        lblInstruccionesSeleccion.setText("Si tiene problemas con la selección, presione aquí!");
        lblInstruccionesSeleccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInstruccionesSeleccionMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("IR A: ");

        lblStockIr.setText("MODIFICAR STOCK");
        lblStockIr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblStockIrMouseClicked(evt);
            }
        });

        lblCatalogoIr.setText("PÁGINA PRINCIPAL");
        lblCatalogoIr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCatalogoIrMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                                    .addComponent(txtDeLista)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnCancelar)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnEliminar)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnModificar)
                                                .addGap(17, 17, 17)
                                                .addComponent(btnAgregar))))
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel13))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(btnCalcular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(txtPorMenor, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(36, 36, 36)
                                                    .addComponent(txtPorMayor, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(txtPorcentajePrecioDeLista, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2)
                                            .addComponent(btnAumentoPrecioDeLista)))
                                    .addComponent(jLabel16))
                                .addGap(111, 111, 111)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblStockIr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCatalogoIr, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel1)
                                .addGap(10, 10, 10)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblInstruccionesSeleccion)))
                        .addContainerGap(56, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDeLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar)
                            .addComponent(btnEliminar)
                            .addComponent(btnModificar)
                            .addComponent(btnAgregar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCatalogoIr, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblStockIr, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPorcentajePrecioDeLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAumentoPrecioDeLista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPorMenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPorMayor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCalcular)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInstruccionesSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDeListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeListaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeListaActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        this.evitarDuplicidadDeRegistros();
        this.agregarRegistros();
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        this.modificarRegistros();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.eliminarRegistros();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.limpiarRegistros();
        txtPorMenor.setText("");
        txtPorMayor.setText("");
        txtPorcentajePrecioDeLista.setText("");
        //txtBuscar.setText("");
        
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        // TODO add your handling code here:
        
        try {
            
            if (evt.getClickCount()==1){ //RECUPERA INFO DE TBL Y COMPLETA TXT
        
                JTable receptor =(JTable)evt.getSource();
                txtCodigo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),0).toString()); //SELECCIÓN SIN FILTRADO 
                txtProducto.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),1).toString());
                txtMarca.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),2).toString());
                txtDeLista.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),6).toString());
                
                try {
                    int selection = tblProductos.getSelectedRow();   //Hago conversión a coordenadas de la tabla sin filtrar de la columna seleccionada, o sea 
                    if (selection>0) {                           //*(sigue) posición original!!!
                        selection = tblProductos.convertRowIndexToModel(selection);
                        txtCodigo.setText(receptor.getModel().getValueAt(selection,0).toString());
                        txtProducto.setText(receptor.getModel().getValueAt(selection,1).toString());
                        txtMarca.setText(receptor.getModel().getValueAt(selection,2).toString());
                        txtDeLista.setText(receptor.getModel().getValueAt(selection,6).toString());
                }
                
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error al seleccionar, pruebe de otra manera! :/");
                }
            }
            } catch (HeadlessException e) {
                    JOptionPane.showMessageDialog(null, "Error al seleccionar, pruebe de otra manera! :/");
                }        
        
        /*if (evt.getClickCount()==1){ //RECUPERA INFO DE TBL Y COMPLETA TXT
            JTable receptor =(JTable)evt.getSource();
            
            txtCodigo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),0).toString());
            txtProducto.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),1).toString());
            txtMarca.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),2).toString());
            txtDeLista.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),6).toString());
            btnAgregar.setEnabled(false);
        
        }*/
        
    }//GEN-LAST:event_tblProductosMouseClicked

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        //sorter.setRowFilter(RowFilter.regexFilter(txtBuscar.getText(), 0,1,2,3,4)); //DISTINGUE MAYUS de minu, es más preciso.
        try {
            
            sorter.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar.getText(), 0,1,2,3,4)); //INDISTINTO MAYUS o minus.
            this.recuperarDatosGUI();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR AL SELECCIONAR");
        }
        
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
        try {
            this.calculoporMenorYmayor();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ingrese un número en cada casillero y seleccione un producto antes de presionar el boton 'Calcular'.- ");
        }       
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnAumentoPrecioDeListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAumentoPrecioDeListaActionPerformed
        // TODO add your handling code here:
        this.incrementoFilasSeleccionadas();
    }//GEN-LAST:event_btnAumentoPrecioDeListaActionPerformed

    private void lblInstruccionesSeleccionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInstruccionesSeleccionMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==1){
            JOptionPane.showMessageDialog(null, "1- Escriba el código/Nombre/Producto/Marca. 2- Seleccione la fila requerida. 3- Borre lo escrito en el buscador. 4- Haga las modificaciones necesarias en el producto seleccionado. 5- Presione Modificar/Cancelar.");
        }
    }//GEN-LAST:event_lblInstruccionesSeleccionMouseClicked

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void lblStockIrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblStockIrMouseClicked
        // TODO add your handling code here:
        stockForm objStockF = new stockForm();
        objStockF.setLocationRelativeTo(null);
        objStockF.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lblStockIrMouseClicked

    private void lblCatalogoIrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCatalogoIrMouseClicked
        // TODO add your handling code here:
        catalogoForm objcatalogoF = new catalogoForm();
        objcatalogoF.setLocationRelativeTo(null);
        objcatalogoF.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lblCatalogoIrMouseClicked
    
    public productosBL recuperarDatosGUI(){//Todo lo que el usuario escribe
        
        
        productosBL objProductos= new productosBL();
        
        objProductos.setCodigo(txtCodigo.getText());
        objProductos.setProducto(txtProducto.getText());
        objProductos.setMarca(txtMarca.getText());
        
        float deLista = (txtDeLista.getText().isEmpty())?0: Float.parseFloat(txtDeLista.getText());
        objProductos.setDeLista(deLista);
            
        return objProductos;
    
    }
    
    public void mostrarDatos(){
        
        while (model.getRowCount()>0){
            model.removeRow(0);
        
        }
        conexion objConnection = new conexion();
            try {
                
                ResultSet resultado = objConnection.consultarRegistros("SELECT * FROM tablaProductos");
                
                while (resultado.next()){
                    System.out.println(resultado.getString("codigo"));
                    System.out.println(resultado.getString("producto"));
                    System.out.println(resultado.getString("marca"));
                    System.out.println(resultado.getFloat("porMenor"));
                    System.out.println(resultado.getFloat("porMayor"));
                    System.out.println(resultado.getInt("stock"));
                    System.out.println(resultado.getFloat("deLista"));
            
                    Object[] objInfo = {resultado.getString("codigo"),resultado.getString("producto"), resultado.getString("marca"), resultado.getFloat("porMenor"), resultado.getFloat("porMayor"), resultado.getInt("stock"), resultado.getFloat("deLista")};
                    model.addRow(objInfo);
                    
            }
            
            
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e + " Error al mostrar los datos. Reinicie el programa!");
            }
        
        
    }
    
    
    public void eliminarRegistros(){
        conexion objConnection = new conexion();
        
        
        //int filas[] = tblProductos.getSelectedRows();
        //for (int i= 0; i== filas.length; i++){
        int fila = tblProductos.getSelectedRow();
        
        String valor = tblProductos.getValueAt(fila, 0).toString(); //columna 0 o sea, código.
            
        try {
            String sentenciaInsert = String.format("DELETE FROM tablaProductos WHERE codigo ='"+ valor+"'");
            String sentenciaInsertBorrarTablaStock = String.format("DELETE FROM tablaStock WHERE codigo = '"+valor+"'");
            
            objConnection.ejecutarSentenciaSQL(sentenciaInsert);
            objConnection.ejecutarSentenciaSQL(sentenciaInsertBorrarTablaStock);
            
            this.mostrarDatos();
            this.limpiarRegistros();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar la fila que desea eliminar.-");
            
        }
        
    }
        
    
    public void agregarRegistros(){
        
        try {
            conexion objConnection = new conexion();
            productosBL objProductos = recuperarDatosGUI();
            
            String timeStamp = new SimpleDateFormat("dd/MM/yyyy HH:mm").format(Calendar.getInstance().getTime());

        
            String sentenciaInsert = String.format("INSERT INTO tablaProductos (codigo, producto, marca, porMenor, porMayor, stock, deLista) "
                   + "VALUES ('%s', '%s', '%s', '%.2f', '%.2f', '%d', '%.2f')", objProductos.getCodigo(),objProductos.getProducto(), objProductos.getMarca(), objProductos.getPorMenor(), objProductos.getPorMayor(), objProductos.getStock(), objProductos.getDeLista());
            
            String sentenciaInsertCodigosParaStock = String.format("INSERT INTO tablaStock (codigo, fecha) VALUES ('%s', '"+timeStamp+"')",objProductos.getCodigo());
            
            objConnection.ejecutarSentenciaSQL(sentenciaInsert);
            objConnection.ejecutarSentenciaSQL(sentenciaInsertCodigosParaStock);
            this.mostrarDatos();
            this.limpiarRegistros();
            
            
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Algo salió mal al actualizar la base de datos. Reinicie el programa.- ");
        }
        
    }
    
    
    
    public void modificarRegistros(){
        
        try {
            conexion objConnection = new conexion();
        
            productosBL objProductos = recuperarDatosGUI();

            String sentenciaInsert = String.format("UPDATE tablaProductos SET producto = '%s', marca = '%s', deLista= '%.2f' "
                    + "WHERE codigo = '%s'", objProductos.getProducto(), objProductos.getMarca(), objProductos.getDeLista(), objProductos.getCodigo());
        
            objConnection.ejecutarSentenciaSQL(sentenciaInsert);
        
            this.mostrarDatos();
            this.limpiarRegistros();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Algo salió mal al actualizar la base de datos. Reinicie el programa.- ");
        }
        
       
    }  
    
    public void limpiarRegistros(){
        
        txtCodigo.setText("");
        txtProducto.setText("");
        txtMarca.setText("");
        txtDeLista.setText("");
        //txtPorcentajePrecioDeLista.setText("");
        
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }
    
    public void calculoporMenorYmayor(){
    
        
        int fila = tblProductos.getSelectedRow();
                                                                             //    TRATAR DE METER UNA SELECCIÓN MÚLTIPLE
        String codi = tblProductos.getValueAt(fila, 0).toString();           //int filas[] = tblProductos.getSelectedRows();
                                                                             //for (int i= 0; i< filas.length; i++){
                                                                             // usa el indice fila[i] para indicar qué fila debe tratar
        try {
            //String codi = tblProductos.getValueAt(fila, 0).toString();
            float deLis = Float.parseFloat(this.tblProductos.getValueAt(fila, 6).toString()); 
            
            float porcientoMenor = Float.parseFloat(txtPorMenor.getText());
            float porcientoMayor = Float.parseFloat(txtPorMayor.getText());
                    
            float porMenor = (porcientoMenor * deLis / 100) + deLis;// VALORES FINALES 
            float porMayor = (porcientoMayor * deLis / 100) + deLis;
            
            conexion objConnection = new conexion();
            
            String sentenciaInsert = String.format("UPDATE tablaProductos SET porMenor ='"+porMenor+"', porMayor = '"+porMayor+"', "
                    + "deLista= '"+deLis+"' WHERE codigo = '"+codi+"'");
        
            objConnection.ejecutarSentenciaSQL(sentenciaInsert);
  
            this.mostrarDatos();
            this.limpiarRegistros();
            
            
        } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al actualizar base de datos, reinicie el programa.- ");
            
        }
    }
    
    public void incrementoFilasSeleccionadas(){
    
            int filas = tblProductos.getSelectedRow();
            String codi = tblProductos.getValueAt(filas, 0).toString();
            
            float deLis = Float.parseFloat(this.tblProductos.getValueAt(filas, 6).toString());
            float porcent=Float.parseFloat(txtPorcentajePrecioDeLista.getText());
            float porcentaje= (deLis * porcent / 100) + deLis;
            
            try {
                conexion objConnection = new conexion();
                
                String sentenciaInsert = String.format("UPDATE tablaProductos SET deLista= '"+porcentaje+"' "
                        + "WHERE codigo ='"+codi+"'");
        
                objConnection.ejecutarSentenciaSQL(sentenciaInsert);
  
                this.mostrarDatos();
                this.limpiarRegistros();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Algo salió mal al actualizar la base de datos. Reinicie el programa.- ");
        }
        
    }
    
    public void evitarDuplicidadDeRegistros(){    
      
        String s = "";
        boolean exists = false;
        for (int i = 0; i < tblProductos.getRowCount(); i++) {
            s = tblProductos.getValueAt(i, 0).toString().trim();
 
            if (txtCodigo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Introduce un valor");
                break;
            } else if (txtCodigo.getText().equals(s)) {
                exists = true;
                break;
 
            }
        }
        if (!exists) {
            final DefaultTableModel dd = (DefaultTableModel) tblProductos.getModel();
            final ArrayList <String> lista = new ArrayList<>();
            final String codigo = txtCodigo.getText();
            if (!codigo.equals("")) {
                lista.add(txtCodigo.getText());
                dd.addRow(lista.toArray());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Codigo existente, introduzca uno diferente!.");
        }
    
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(productosForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(productosForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(productosForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(productosForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new productosForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAumentoPrecioDeLista;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCatalogoIr;
    private javax.swing.JLabel lblInstruccionesSeleccion;
    private javax.swing.JLabel lblStockIr;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDeLista;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtPorMayor;
    private javax.swing.JTextField txtPorMenor;
    private javax.swing.JTextField txtPorcentajePrecioDeLista;
    private javax.swing.JTextField txtProducto;
    // End of variables declaration//GEN-END:variables
}
